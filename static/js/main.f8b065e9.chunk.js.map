{"version":3,"sources":["Components/FactCard.js","Screens/HomeScreen.js","Components/NavBar.js","Screens/PageTemplate.js","App.js","serviceWorker.js","index.js"],"names":["FactCard","props","state","yPos","Math","random","showSource","firstColor","toString","substr","secondColor","left","this","upBob","setInterval","changeFactor","pow","abs","setState","right","style","backgroundImage","borderRadius","borderColor","borderStyle","borderWidth","padding","marginTop","marginBottom","width","boxShadow","transition","transform","ref","absPosDiv","src","img","margin","text","textAlign","animation","onClick","React","Component","HomeScreen","overflowX","overflowY","height","backgroundRepeat","backgroundSize","className","fontSize","color","fontWeight","typing","class","NavBar","scrolled","active","alpha","window","scrollY","innerHeight","console","log","newProps","addEventListener","removeEventListener","backgroundColor","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","PageTemplate","ChangeTracker","withRouter","match","path","location","history","pathname","length","substring","replace","App","basename","process","Boolean","hostname","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f8b065e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Fade from 'react-reveal/Fade';\r\nimport LightSpeed from 'react-reveal/LightSpeed';\r\nexport default class FactCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.firstColor = '#'+Math.random().toString(16).substr(2,6)+\"30\"\r\n        this.secondColor = '#'+Math.random().toString(16).substr(2,6)+\"30\"\r\n        this.left = Math.random()>.5\r\n    }\r\n    state={\r\n        yPos:Math.random()*10-5,\r\n        showSource:false,\r\n    }\r\n    componentDidMount(){\r\n        this.upBob = Math.random()>.5\r\n        setInterval(()=>{\r\n            if(this.state.yPos>5)\r\n                this.upBob = false\r\n            else if(this.state.yPos<-5)\r\n                this.upBob = true\r\n            let changeFactor = (1-Math.pow(Math.abs(this.state.yPos)/5,2))*.1+.00002\r\n            this.setState({yPos:this.upBob?this.state.yPos+changeFactor:this.state.yPos-changeFactor})\r\n        },10)\r\n    }\r\n    render(){\r\n        return(\r\n            <LightSpeed left={this.left} right={!this.left}>\r\n                <div>\r\n                    <div style={{\r\n                        backgroundImage:\"linear-gradient(to bottom right, \"+this.firstColor+\", \"+this.secondColor+\")\", \r\n                        borderRadius:5, \r\n                        borderColor:\"grey\", \r\n                        borderStyle:\"solid\", \r\n                        borderWidth:2, \r\n                        padding:5, \r\n                        marginTop:10, \r\n                        marginBottom:10, \r\n                        width:\"100%\",\r\n                        boxShadow: (5-this.state.yPos)/2+\"px \"+(5-this.state.yPos)+\"px lightgrey\",\r\n                        transition: \"transform 100ms linear\",\r\n                        transform: \"translateY(\"+this.state.yPos+\"px) translateX(\"+this.state.yPos/2+\"px)\"\r\n                    }} ref={this.absPosDiv}>\r\n                        <img src={this.props.img}/>\r\n                        <p style={{margin:0}}>{this.props.text}</p>\r\n                        {!this.state.showSource && <p style={{textAlign:\"right\",padding:0,margin:0, animation: \"fadeIn ease 10s\"}}><small onClick={()=>this.setState({showSource:true})}>View Source</small></p>}\r\n                        {this.state.showSource && <small style={{animation: \"fadeIn ease 2s\"}}>{this.props.src}</small>}\r\n                    </div>\r\n                </div>\r\n            </LightSpeed>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport FactCard from '../Components/FactCard';\r\nimport TypeWriter from 'react-typewriter';\r\nimport Jello from 'react-reveal/Jello';\r\nimport RubberBand from 'react-reveal/RubberBand';\r\nexport default class HomeScreen extends React.Component {\r\n    render(){\r\n        return(\r\n            <div style={{overflowX:\"hidden\",overflowY:\"hidden\"}}>\r\n                <div style={{height:\"100vh\", width:\"100vw\", backgroundImage:\"url('https://a360-rtmagazine.s3.amazonaws.com/wp-content/uploads/2019/05/air-pollution-smog-1500-1280x640.jpg')\",  backgroundRepeat: \"no-repeat\",backgroundSize: \"cover\"}}>\r\n                    <div className=\"superCenter\" style={{width:\"75vw\"}}>\r\n                        <p style={{textAlign:\"center\",fontSize:\"5vw\",color:\"white\",fontWeight:'bold'}}>\r\n                            <RubberBand><h1 style={{fontSize:\"20vw\"}}>POPs</h1></RubberBand>\r\n                            <TypeWriter typing={1} class=\"display-1\" >Persistent Organic Pollutants</TypeWriter>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <Jello><h2 className=\"display-3 text-center\">What are POPs?</h2></Jello>\r\n                    <p>POPs are blah blah blah....</p>\r\n                    <br/>\r\n                    <Jello><h2 className=\"display-2 text-center\">Fun Facts</h2></Jello>\r\n                    <p>We encourage you to read this whole website. Use the links in the naviagtion bar at the top of the site to get detailed information. If you don't have time, we have compiled of the list of what we think are the most interesting and most imporant things you need to know.</p>\r\n                    <br/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                    <FactCard text=\"FACT\" src=\"SOURCE\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nexport default class NavBar extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\"NEW\")\r\n        this.state={\r\n            alpha:this.props.active == \"Home\"?window.scrollY/window.innerHeight:1\r\n        }\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        console.log(newProps.active + \" - \"+this.props.active)\r\n        this.setState({alpha:newProps.active == \"Home\"?window.scrollY/window.innerHeight:1})\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('scroll',this.scrolled)\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('scroll',this.scrolled)\r\n    }\r\n    scrolled = () => {\r\n        if(this.props.active == \"Home\")\r\n            this.setState({alpha:window.scrollY/window.innerHeight})\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.active)\r\n        return(\r\n            <div>\r\n                {this.props.active!=\"Home\" && <div>\r\n                    <br/><br/><br/>\r\n                </div>}\r\n                <nav className={`navbar navbar-expand-lg fixed-top navbar-dark`} style={{backgroundColor: \"rgba(0,0,0,\"+this.state.alpha+\")\"}}>\r\n                    <a className=\"navbar-brand\" href=\"https://kihtrak.com/POPs\">All About POPs</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav ml-auto\">\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/PageTemplate\">PageTemplate    </Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                            <Link className={`nav-item nav-link ${this.props.active == \"Home\"?\"active\":\"\"}`} to=\"/\">Home</Link>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport FactCard from '../Components/FactCard';\r\nimport TypeWriter from 'react-typewriter';\r\nimport Jello from 'react-reveal/Jello';\r\nimport RubberBand from 'react-reveal/RubberBand';\r\n\r\nexport default class PageTemplate extends React.Component {\r\n    render(){\r\n        return(\r\n            <div style={{overflowX:\"hidden\",overflowY:\"hidden\"}}>\r\n                <div className=\"container\">\r\n                    <Jello><h2 className=\"display-3 text-center\">Title</h2></Jello>\r\n                    <p>Titles are actual something something. This that blah blah</p>\r\n                    <FactCard text=\"999% of sea turtle in the universe are deas due to POPS\" src=\"NY Times\"/>\r\n                    <p>Many folks are confused by title because of this.</p>\r\n                    <FactCard text=\"Title is not the same thing as subtitle\" src=\"My Brain\"/>\r\n                    <p>Check out this graph: </p>\r\n                    <FactCard img=\"https://www.mathsisfun.com/data/images/line-graph-example.svg\" src=\"SOURCE\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HomeScreen from './Screens/HomeScreen';\r\nimport NavBar from './Components/NavBar';\r\nimport PageTemplate from './Screens/PageTemplate'\r\nimport {withRouter} from 'react-router'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nfunction getName(path){\r\n  if(path.length<=6)\r\n    return \"Home\";\r\n  return path.substring(5).replace(\"/\",\"\")\r\n}\r\nconst ChangeTracker = withRouter(({match, location, history}) => {\r\n  console.log(location.pathname, location.state);\r\n  return <NavBar active={getName(location.pathname)}/>;\r\n})\r\nfunction App() {\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <ChangeTracker/>\r\n      <Switch>\r\n        <Route path=\"/PageTemplate\">\r\n          <PageTemplate/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <HomeScreen/>\r\n        </Route>\r\n      </Switch>\r\n      <footer className=\"d-flex justify-content-between flex-wrap\">\r\n        <p><a href=\"#\">Go back to top</a></p><p>Thanks for reading!</p><p>Made with ❤️ for NJIT Chemistry Olympiad</p>\r\n      </footer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nif (rootElement.hasChildNodes()) {\r\n  ReactDOM.hydrate(<App />, rootElement);\r\n} else {\r\n  ReactDOM.render(<App />, rootElement);\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}